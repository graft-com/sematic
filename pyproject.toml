[tool.pyright]
exclude = [
  "bazel-out",
  "bazel-bin",
  "bazel-sematic",
  "bazel-testlogs",
  "docs",
  "build",
]

[tool.isort]
profile = "black"
import_heading_stdlib="Standard Library"
import_heading_firstparty="Sematic"
import_heading_thirdparty="Third-party"
known_third_party = ["flask", "psycopg2", "matplotlib", "cloudpickle"]
multi_line_output = 3


[tool.poetry]
name = "sematic"
version = "0.139.1"
license = "Apache License 2.0"
description = "An open-source ML pipeline development platform"
homepage = "https://sematic.dev"
readme = "README.md"
authors = ["Sematic AI, Inc."]
maintainers = ["Sematic AI <support@sematic.dev>"]
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Visualization",
    "Typing :: Typed",
]

[tool.poetry.scripts]
sematic = "sematic.cli.main:cli"

[tool.poetry.dependencies]
python = ">=3.10, <3.13"

# DB
sqlalchemy = ">=2.0"
psycopg2-binary = "*"

# Code
pyyaml = "6.0.1"

# Git integration
git-python = "*"

# Build system
docker = "*"

# Client
websocket-client = "*"
python-socketio = "*"

# API server
flask = "*"
flask-cors = "*"
cloudpickle = "*"
requests = "*"
werkzeug = "*"
python-dateutil = "*"
starlette = "*"
google-auth = "*"
uvicorn = { version = "*", extras = ["standard"] }
asgiref = "*"

# CLI
click = "*"

# Types
snowflake-connector-python = "*"
pyopenssl = "*"
pyarrow = ">=12.0.0"

# Cloud execution
kubernetes = "*"
boto3 = "*"
google-cloud-storage = "*"
python-magic = "*"


[tool.poetry.group.dev.dependencies]
# Tests
pytest = "7.1.1"
testing-postgresql = "*"
coveragepy = { git = "https://github.com/ulfjack/coveragepy.git", branch = "lcov-support" }

# System
debugpy = "*"
ipython = "*"

# Code
pyright = "*"
isort = "*"

[tool.poetry.group.examples]
optional = true

[tool.poetry.group.examples.dependencies]
torch = "1.13.1"
torchvision = "0.14.1"
pytorch-lightning = "*"
ray-lightning = "*"
torchmetrics = "*"
plotly = "*"
pandas = "*"
pandas-stubs = "*"
seaborn = "*"
matplotlib = "*"
statsmodels = "*"
scikit-learn = "*"
numpy = ">=1.24.0"
xgboost = "*"
accelerate = "*"
datasets = ">=2.12.0"
huggingface-hub = "*"
peft = "*"
transformers = "*"
gradio = "*"
trafilatura = "*"
cohere = "*"
openai = "*"

[tool.poetry.group.ray]
optional = true

[tool.poetry.group.ray.dependencies]
ray = { version = ">=2.3.0", extras = ["default", "air"] }
cython = "0.29.33"

[tool.poetry.extras]
ray = ["ray", "cython"]
examples = [
  "torch",
  "torchvision",
  "pytorch-lightning",
  "ray-lightning",
  "torchmetrics",
  "plotly",
  "pandas",
  "pandas-stubs",
  "seaborn",
  "matplotlib",
  "statsmodels",
  "scikit-learn",
  "numpy",
  "xgboost",
  "accelerate",
  "datasets",
  "huggingface-hub",
  "peft",
  "transformers",
  "gradio",
  "trafilatura",
  "cohere",
  "openai",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
